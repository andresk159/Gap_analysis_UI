shiny::runApp('D:/Gap_analysis_UI')
runApp('D:/Gap_analysis_UI')
runApp('D:/Gap_analysis_UI')
runApp('D:/Gap_analysis_UI')
runApp('D:/Gap_analysis_UI')
runApp('D:/Gap_analysis_UI')
Sys.getenv("HOME")
Sys.getenv("HOMEDRIVE")
runApp('D:/Gap_analysis_UI')
Sys.getenv()
runApp('D:/Gap_analysis_UI')
runApp('D:/Gap_analysis_UI')
https://github.com/andresk159/Gap_analysis_UI/tree/master/www/scripts/00_config
download.file("https://github.com/andresk159/Gap_analysis_UI/tree/master/www/scripts/00_config")
download.file("https://github.com/andresk159/Gap_analysis_UI/tree/master/www/scripts/00_config", destfile = "D:/OneDrive - CGIAR/Attachments/Desktop/pruebita")
download.file("https://github.com/andresk159/Gap_analysis_UI/tree/master/www/scripts/00_config", destfile = "D:/OneDrive - CGIAR/Attachments/Desktop/pruebita.zip")
download.file("https://github.com/andresk159/Gap_analysis_UI/blob/master/www/scripts/00_config/config.R", destfile = "D:/OneDrive - CGIAR/Attachments/Desktop/pruebita.txt")
download.file("https://raw.githubusercontent.com/andresk159/Gap_analysis_UI/master/www/scripts/00_config/config.R", destfile = "D:/OneDrive - CGIAR/Attachments/Desktop/pruebita.txt")
download.file("https://raw.githubusercontent.com/andresk159/Gap_analysis_UI/master/www/scripts/00_config/config.R", destfile = "D:/OneDrive - CGIAR/Attachments/Desktop/pruebita.R")
list.files("Z:/gap_analysis_landraces/runs/scripts/00_config", recursive = t)
list.files("Z:/gap_analysis_landraces/runs/scripts/00_config", recursive = T)
list.files("Z:/gap_analysis_landraces/runs/scripts/00_config")
list.dirs("Z:/gap_analysis_landraces/runs/scripts/00_config")
list.dirs("Z:/gap_analysis_landraces/runs/scripts/")
list.dirs("Z:/gap_analysis_landraces/runs/scripts/00_config")
list.dirs("Z:/gap_analysis_landraces/runs/scripts/00_config/")
list.files("Z:/gap_analysis_landraces/runs/scripts/")
list.files("Z:/gap_analysis_landraces/runs/scripts")
list.files("Z:/gap_analysis_landraces/runs/scripts", all.files = T)
list.files("Z:/gap_analysis_landraces/runs/scripts", all.files = T, recursive = T)
list.files("Z:/gap_analysis_landraces/runs/scripts", recursive = T)
list.files("D:/Gap_analysis_UI/www/scripts", all.files = T, recursive = T)
lists <- list.files("D:/Gap_analysis_UI/www/scripts", all.files = T, recursive = T)[27:76]
lists
lists <- list.files("D:/Gap_analysis_UI/www/scripts", all.files = T, recursive = T)[28:76]
lists
paste0("https://github.com/andresk159/Gap_analysis_UI/blob/master/www/scripts/", lists)
lists <- list.files("D:/Gap_analysis_UI/www/scripts", all.files = T, recursive = T)[28:76]
lists
lists <- list.files("D:/Gap_analysis_UI/www/scripts", all.files = T, recursive = T)
lists
lists <- list.files("D:/Gap_analysis_UI/www/scripts", all.files = T, recursive = T)[28:63]
lists
list[grep("/", lists)]
list[grep("\\/", lists)]
grepl("/", lists)
grepl("/[\\.]", lists)
list[grepl("/[\\.]", lists)]
lists[grepl("/[\\.]", lists)]
lists[!grepl("/[\\.]", lists)]
runApp('D:/Gap_analysis_UI')
write.table(lists, "clipboard")
paste("c(",lists, ")", collapse = "" )
paste("c(",paste(lists,","), ")", collapse = "" )
paste("c(",paste0(lists,","), ")", collapse = "" )
paste("c(",paste(lists,",", collapse = "" ), ")")
paste("c(",paste(""",lists,",", collapse = "" ), ")")
paste("c(",paste("\"",lists,",", collapse = "" ), ")")
, collapse = ""
write.table(lists, "clipboard")
write.table(lists, "clipboard", row.names = F)
"x"
"00_config/config.R"
"00_config/config_crop.R"
"00_config/pre_config.R"
"01_classification/.Rhistory"
"01_classification/classification_function.R"
"01_classification/classification_function_new_models.R"
"01_classification/create_occ_shp.R"
"01_classification/crop_raster.R"
"01_classification/prepare_input_data.R"
"02_sdm_modeling/.DS_Store"
"02_sdm_modeling/.Rhistory"
"02_sdm_modeling/background_points.R"
"02_sdm_modeling/calibration_function.R"
"02_sdm_modeling/null_model.R"
"02_sdm_modeling/sdm_maxnet_approach_function.R"
"02_sdm_modeling/tuning_maxNet.R"
"03_gap_methods/.DS_Store"
"03_gap_methods/.Rhistory"
"03_gap_methods/combine_score.R"
"03_gap_methods/cost_distance_function.R"
"03_gap_methods/create_buffers.R"
"03_gap_methods/create_png_maps.R"
"03_gap_methods/delaunay.R"
"03_gap_methods/delaunay_geo_score.R"
"03_gap_methods/ecogeo_cluster.R"
"03_gap_methods/env_distance.R"
"03_gap_methods/gap_maps.R"
"03_gap_methods/gaps_validation.R"
"03_gap_methods/generate_report.R"
"03_gap_methods/kernel_function.R"
"03_gap_methods/mask_delaunay.R"
"03_gap_methods/rasterbuffer_to_polygons.R"
"03_gap_methods/summary_function.R"
"03_gap_methods/validation_function.R"
"03_gap_methods/validation_helpers.R"
"03_gap_methods/validation_helpers_original.R"
#descargar scripts desde github
lists <- c( "00_config/config.R",
"00_config/config_crop.R",
"00_config/pre_config.R",
"01_classification/.Rhistory",
"01_classification/classification_function.R",
"01_classification/classification_function_new_models.R",
"01_classification/create_occ_shp.R",
"01_classification/crop_raster.R",
"01_classification/prepare_input_data.R",
"02_sdm_modeling/.DS_Store",
"02_sdm_modeling/.Rhistory",
"02_sdm_modeling/background_points.R",
"02_sdm_modeling/calibration_function.R",
"02_sdm_modeling/null_model.R",
"02_sdm_modeling/sdm_maxnet_approach_function.R",
"02_sdm_modeling/tuning_maxNet.R",
"03_gap_methods/.DS_Store",
"03_gap_methods/.Rhistory",
"03_gap_methods/combine_score.R",
"03_gap_methods/cost_distance_function.R",
"03_gap_methods/create_buffers.R",
"03_gap_methods/create_png_maps.R",
"03_gap_methods/delaunay.R",
"03_gap_methods/delaunay_geo_score.R",
"03_gap_methods/ecogeo_cluster.R",
"03_gap_methods/env_distance.R",
"03_gap_methods/gap_maps.R",
"03_gap_methods/gaps_validation.R",
"03_gap_methods/generate_report.R",
"03_gap_methods/kernel_function.R",
"03_gap_methods/mask_delaunay.R",
"03_gap_methods/rasterbuffer_to_polygons.R",
"03_gap_methods/summary_function.R",
"03_gap_methods/validation_function.R",
"03_gap_methods/validation_helpers.R",
"03_gap_methods/validation_helpers_original.R",)
#descargar scripts desde github
lists <- c( "00_config/config.R",
"00_config/config_crop.R",
"00_config/pre_config.R",
"01_classification/.Rhistory",
"01_classification/classification_function.R",
"01_classification/classification_function_new_models.R",
"01_classification/create_occ_shp.R",
"01_classification/crop_raster.R",
"01_classification/prepare_input_data.R",
"02_sdm_modeling/.DS_Store",
"02_sdm_modeling/.Rhistory",
"02_sdm_modeling/background_points.R",
"02_sdm_modeling/calibration_function.R",
"02_sdm_modeling/null_model.R",
"02_sdm_modeling/sdm_maxnet_approach_function.R",
"02_sdm_modeling/tuning_maxNet.R",
"03_gap_methods/.DS_Store",
"03_gap_methods/.Rhistory",
"03_gap_methods/combine_score.R",
"03_gap_methods/cost_distance_function.R",
"03_gap_methods/create_buffers.R",
"03_gap_methods/create_png_maps.R",
"03_gap_methods/delaunay.R",
"03_gap_methods/delaunay_geo_score.R",
"03_gap_methods/ecogeo_cluster.R",
"03_gap_methods/env_distance.R",
"03_gap_methods/gap_maps.R",
"03_gap_methods/gaps_validation.R",
"03_gap_methods/generate_report.R",
"03_gap_methods/kernel_function.R",
"03_gap_methods/mask_delaunay.R",
"03_gap_methods/rasterbuffer_to_polygons.R",
"03_gap_methods/summary_function.R",
"03_gap_methods/validation_function.R",
"03_gap_methods/validation_helpers.R",
"03_gap_methods/validation_helpers_original.R")
paste0("https://github.com/andresk159/Gap_analysis_UI/blob/master/www/scripts/", lists)
srcDir
i <- 1
url <- paste0("https://github.com/andresk159/Gap_analysis_UI/blob/master/www/scripts/", lists[i])
paste("www", "scripts", lists[i], sep = .Platform$file.sep)
paste("D:/OneDrive - CGIAR/Attachments/Desktop/config.R", lists[i], sep = .Platform$file.sep)
url <- paste0("https://github.com/andresk159/Gap_analysis_UI/blob/master/www/scripts/", lists[i])
download.file(url,destfile = paste("D:/OneDrive - CGIAR/Attachments/Desktop/config.R", lists[i], sep = .Platform$file.sep))
paste("D:/OneDrive - CGIAR/Attachments/Desktop/", lists[i], sep = .Platform$file.sep)
lists[i]
url <- paste0("https://github.com/andresk159/Gap_analysis_UI/blob/master/www/scripts/", lists[i])
url
download.file(url,destfile = paste("D:/OneDrive - CGIAR/Attachments/Desktop/config.R", sep = .Platform$file.sep))
url <- paste0("https://raw.githubusercontent.com/andresk159/Gap_analysis_UI/master/www/scripts/", lists[i])
url
download.file(url,destfile = paste("D:/OneDrive - CGIAR/Attachments/Desktop/config.R", sep = .Platform$file.sep))
runApp('D:/Gap_analysis_UI')
messageData
msgs <- list(from = c("Crop Name", "Group Name", "Region"),
message = c(crop, occName, input$region),
icon = c(icon("fas fa-seedling"), icon("fas fa-sitemap"), icon("fas fa-map-pin")) )
runApp('D:/Gap_analysis_UI')
is.null(input$crop)
messageItem(from = "mama", message = "message")
messageItem(from = c("mama", "mia"), message = "message")
messageItem(from = c("mama", "mia"), message = c("message", "mio"))
runApp('D:/Gap_analysis_UI')
renderMenu()
runApp('D:/Gap_analysis_UI')
runApp('D:/Gap_analysis_UI')
runApp('D:/Gap_analysis_UI')
runApp('D:/Gap_analysis_UI')
runApp('D:/Gap_analysis_UI')
runApp('D:/Gap_analysis_UI')
runApp('D:/Gap_analysis_UI')
nchar("")
runApp('D:/Gap_analysis_UI')
runApp('D:/Gap_analysis_UI')
runApp('D:/Gap_analysis_UI')
icon("fas fa-seedling")
runApp('D:/Gap_analysis_UI')
crop    <- ifelse(nchar("") == 0, "Not specified yet", "mierda")
crop
runApp('D:/Gap_analysis_UI')
runApp('D:/Gap_analysis_UI')
runApp('D:/Gap_analysis_UI')
runApp('D:/Gap_analysis_UI')
devtools::install_github("RinteRface/shinydashboardPlus")
install.packages("shinydashboardPlus")
library(install.packages("shinydashboardPlus"))
library(shinydashboardPlus)
shinydashboardPlusGallery()
shiny::runApp('D:/Gap_analysis_UI')
runApp('D:/Gap_analysis_UI')
0.0053
1/40
1/39
1-0.025
0.975*0.975
1/38
1-0.026
0.974*0.95
1/37
1-0.027
0.973*0.925
1/38
1-0.026
1-0.974
0.1/0.026
157+209
110+313
2.14-1
1.14/2.14
0.42-0.4
23*6
53*6
318+(947*12)
53/11682
53/11682
53-1000
53*12
947*12
1000+947
1947/2
53/973.5
6+3
9*2
9/18
10-1
9/2
4.5*(9)
9*9
81/2
1000+972
1972/2
28/986
53/973.5
53*6
947*12
11364+318
28*6
972*12
11664+168
28/11832
0.053/0.028
0.053/0.03
0.004/0.002
53*972
947*28
51516/26516
1.9-1
0.9/1.9
log(1.9)
1.96*0.8
1.568+0.64
0.6+0.16
1.96*0.08
0.156+0.3
0.156+0.
0.156+0.6
exp(0.756)
0.6+0.16
exp(0.76)
0.6+0.16
exp(0.76)
0.6-0.16
exp(.44)
0.64-1.96(0.08)
0.64-1.96*(0.08)
0.64+1.96*(0.08)
exp(0.48)
exp(0.79)
250/1500
110/1500
0.16 - 0.07
(4959178 +   .6906545)
(.4959178 +   .6906545)
1.186570/2
250/1500
110/1500
250/360
0.6944-(1250/2640)
(250/360)-(1250/2640)
250/1500
110/1500
1.98+3.2
5.18/2
110/1500
250/110
110/1390
2.27-0.079
250/110
1250/1390
2.27-0.89
.0014638 - .0007888
41/28010
15/19017
4/8
386/1636
0.5-0.2359
4/39
4/1254
0.1-0.003
250/1500
110/1500
0.16-0.0733
(0.16-0.0733)/0
(0.16-0.0733)/0.16
(0.16-0.07)/0.16
110/1500
